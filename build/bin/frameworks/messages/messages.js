"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MsgWriteTokens = exports.MsgWriteBaseFile = exports.MsgSyncImages = exports.MsgSyncGraphics = exports.MsgSyncElements = exports.MsgSetDataFromLocal = exports.MsgSetDataFromApi = exports.MsgProcessElementsCreatingElement = exports.MsgJobCompleteInitStopped = exports.MsgJobCompleteInit = exports.MsgJobComplete = exports.MsgGetTokenMatchNoMatch = exports.MsgGeneratedFileWarning = exports.MsgDownloadFileWritingFile = exports.MsgConfigDebugRc = exports.MsgConfigDebugFinal = exports.MsgConfigDebugEnv = exports.MsgConfigDebugCli = void 0;
const colors_1 = require("../system/colors");
function Message(str, warn) {
    if (warn)
        return `${colors_1.colors.FgYellow}${str}${colors_1.colors.Reset}`;
    else
        return str;
}
function SuccessMessage(str) {
    return `${colors_1.colors.FgGreen}${str}${colors_1.colors.Reset}`;
}
exports.MsgConfigDebugCli = Message(`USER: Command-Line configuration (Medium priority)\n`, true);
exports.MsgConfigDebugEnv = Message(`USER: Environment configuration (Low priority)\n`, true);
exports.MsgConfigDebugFinal = Message(`SYSTEM: Final user configuration that will be used...\n`, true);
exports.MsgConfigDebugRc = Message(`USER: .figmagicrc configuration (Highest priority)\n`, true);
exports.MsgDownloadFileWritingFile = (path) => `\nWriting Figma graphics to disk: ${path}`;
exports.MsgGeneratedFileWarning = Message('THIS FILE IS AUTO-GENERATED BY FIGMAGIC. DO NOT MAKE EDITS IN THIS FILE! CHANGES WILL GET OVER-WRITTEN BY ANY FURTHER PROCESSING.', false);
exports.MsgGetTokenMatchNoMatch = Message(`No matching token! Hard-coding to expected value:`, true);
exports.MsgJobComplete = SuccessMessage(`\nFigmagic completed operations successfully!\n`);
exports.MsgJobCompleteInit = SuccessMessage(`\nFigmagic created a base configuration (.figmagicrc) for you.\n`);
exports.MsgJobCompleteInitStopped = Message(`\nFigmagic tried to create a base configuration for you, but one already existed at .figmagicrc...\n`, true);
exports.MsgProcessElementsCreatingElement = (elementName, fixedName) => `Processing Figma element "${elementName}" as ---> ${fixedName}`;
exports.MsgSetDataFromApi = Message(`\nAttempting to fetch data from Figma API...`, true);
exports.MsgSetDataFromLocal = Message(`\nAttempting to recompile data from local Figma JSON file...`, true);
exports.MsgSyncElements = Message(`\nAttempting to parse elements...\n`, true);
exports.MsgSyncGraphics = Message(`\nGetting vectors from Figma API...`, true);
exports.MsgSyncImages = Message(`\nGetting images from Figma API...`, true);
exports.MsgWriteBaseFile = Message(`\nWriting Figma base file...`, true);
exports.MsgWriteTokens = Message(`\nWriting design tokens...`, true);
//# sourceMappingURL=messages.js.map